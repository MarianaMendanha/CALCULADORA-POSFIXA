/**      @file: 160136784.c
 *     @author: Mariana Mendanha da Cruz
 * @disciplina: Algoritmos e Programação de Computadoresn - APC
 *                                                                                                            
 *   
 *   */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
#include <ctype.h>

#define TAM 8
#define TRUE 1
#define FALSE 0 


char minas[TAM][TAM];
char terreno[TAM][TAM];


/*FUNÇÃO INTERFACE INICIAL E OPÇÕES DE JOGO:*/
void menu();

/*FUNÇÕES JOGO:*/
void charada();
void senha();
void ppt();
void campo_minado();

/*FUNÇÕES AUXILIARES:*/
void limpar_tela();
void limpar_tela2();
void tela_inicial();
void VIDAS(int vidas);
void historia_ppt();
void terreno_escondido();
void terreno_visivel();
void escreve_terreno_escondido();
void escreve_terreno_visivel();
int procura_minas(int linha, int coluna);
void conta_minas(int linha, int coluna);
int ganhou();	


int main(){
	
    printf("\n\n\t\t\tPressione <ENTER> para começar");
    while(getchar() != '\n');

    system("clear || cls");

	menu();
return 0;	
}


void menu(){

	int NUM_JOGO;

	printf("\t\t●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●● \n");
	printf("\t\t● O ESPETACULAR GRANDE JOGO DA VIDA ● \n");
	printf("\t\t●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●● \n\n");

	printf("MENU:\n");
	printf("(1)SENHA\n");
	printf("(2)CHARADAS\n");
	printf("(3)PEDRA/PAPEL/TESOURA\n");
	printf("(4)MINAS\n");
	printf("(5)SAIR\n");

	printf("\t            __________________________________\n");
	printf("\t     [0,0] < OLÁ, DIGITE O NÚMERO DA SUA OPÇÃO)\n");
	printf("\t     |)__)\n");
	printf("\t     -”-”-\n");

	scanf("%d", &NUM_JOGO);
	getchar();

	switch(NUM_JOGO){

		case 1 : 
				 system("clear");
				 printf("(￣^￣)ゞ  Seu comando é uma ordem!\n\n");
				 senha();
	             break;

	    case 2 : 
	    		 system("clear");
				 printf("(￣^￣)ゞ  Seu comando é uma ordem!\n\n");
	    		 charada();
	             break;

	    case 3 : 
				 system("clear");
				 printf("(￣^￣)ゞ  Seu comando é uma ordem!\n\n");
				 ppt();
	             break;

		case 4 : 
				 system("clear");
				 printf("(￣^￣)ゞ  Seu comando é uma ordem!\n\n");
				 campo_minado();
				 break;

		case 5 : 
				 system("clear");
				 printf("(￣^￣)ゞ  Seu comando é uma ordem!\n\n");
				 sleep(1);
				 return;  		 		  

	    default :
	    		 system("clear");
	    		 printf("ESSA NÃO É UMA OPÇÃO, ESCOLHA DE 1 A 4:\n\n");
	    		 menu();

	             break;
	}
return;
}


void senha(){

	srand(time(NULL));

	int senha_correta = abs(rand() % 100001);
	int tentativa = 0;
	int contador = 0;
	char enter;

	printf("\t\t◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎\n");
	printf("\t\t◎┬┴┬┴┬┴┬┴┬┴┬┴┬┴┤SENHA├┬┴┬┴┬┴┬┴┬┴┬┴┬┴◎\n");
	printf("\t\t◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎◎\n\n");

	printf("Bem-vindo ao senha,\n");
	printf("O jogo é simples, você só precisa encontrar a senha correta, que é um número entre 0 e 100.000 .\n");
	printf("-PARA VOLTAR AO MENU DIGITE UM NÚMERO NEGATIVO-\n");
	printf("Qual é o seu primeiro palpite?\n\n");

	do{

	    fflush(stdin);

	    if (scanf("%d", &tentativa) == 1){

	 		if(tentativa > 100000){
	 			printf("Querido, a senha é um número entre 0 e 100.000, assim você não vai acertar nunca.\n\n");
	 		}

	 		if(tentativa < 0){
	 			printf("\tＵＴｪＴＵ <A senha era: %d, mas por que você desistiu de mim?)\n\n", senha_correta);
	 			printf("\tVocê desistiu na tentativa %d. Com a penalidade de 100 tentativas.\n\n", contador+100);
	 			printf("\n\t\tPressione <ENTER> para voltar ao MENU.");
	    		fflush(stdin);
	    		fflush(stdout);
	    		scanf("%c", &enter);
	    		while(getchar() != '\n');
	 			system("clear");
	 			menu();
	 		}

			if(tentativa >= senha_correta - 99999 && tentativa < senha_correta - 77777){
				printf("LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE, bem longe, péssimo chute, tenta na próxima, é um número bem maior\n\n");
			}

			if(tentativa >= senha_correta - 77777 && tentativa < senha_correta - 50000){	
				printf("MIGO, VOCÊ ESTÁ TÃO LONGE DA SENHA CORRETA, NEM IRIA TE DIZER SE É UM NÚMERO MAIOR OU MENOR QUE %d, VOCÊ NÃO MERECE, MAS EU SOU LEGAL, A SENHA É MAIOR QUE %d.\n\n", tentativa, tentativa);
			}

			if(tentativa >= senha_correta - 50000 && tentativa < senha_correta - 10000){
				printf("LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE, a senha é maior que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 10000 && tentativa < senha_correta - 1000){
				printf("Está começando a chegar perto, se esforce mais, a senha é maior que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 1000 && tentativa < senha_correta - 500){
				printf("Está morno a senha é maior que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 500 && tentativa < senha_correta - 100){
				printf("Está ficando quente... A senha é maior que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 100 && tentativa < senha_correta - 50){
				printf("MININU, ta quase, ta quase, a senha é maior que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 50 && tentativa < senha_correta - 5){
				printf("AAAAAAAAAAAAAh DANADO(A), TÁ PERTO EIN, a senha é maiorzinha que %d\n\n", tentativa);
			}

			if(tentativa >= senha_correta - 5 && tentativa < senha_correta){
				printf("Se você não acertar agora, eu nao sei quem vai, a senha é maior que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 5 && tentativa > senha_correta){
				printf("Se você não acertar agora, eu nao sei quem vai, a senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 50 && tentativa > senha_correta + 5){
				printf("AAAAAAAAAAAAAh DANADO(A), TÁ PERTO EIN, a senha é menorzinha que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 100 && tentativa > senha_correta + 50){
				printf("MININU, ta quase, ta quase, a senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 500 && tentativa > senha_correta + 100){
				printf("Está ficando quente... A senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 1000 && tentativa > senha_correta + 500){
				printf("Está morno a senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 10000 && tentativa > senha_correta + 1000){
				printf("Está começando a chegar perto, se esforce mais, a senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 50000 && tentativa > senha_correta + 10000){
				printf("LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE, a senha é menor que %d\n\n", tentativa);
			}

			if(tentativa <= senha_correta + 77777 && tentativa > senha_correta + 50000){
				printf("MIGO, VOCÊ ESTÁ TÃO LONGE DA SENHA CORRETA, NEM IRIA TE DIZER SE É UM NÚMERO MAIOR OU MENOR QUE %d, VOCÊ NÃO MERECE, MAS EU SOU LEGAL, A SENHA É MENOR QUE %d.\n\n", tentativa, tentativa);
			}

			if(tentativa <= senha_correta + 99999 && tentativa > senha_correta + 77777){
				printf("LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE LONGE, bem longe, péssimo chute, tenta na próxima, é um número bem menor\n\n");
			}

			++contador;

	    }else{

	    	printf("Você está querendo me mandar alguma mensagem? O que você digitou não vai contar como uma tentativa, Eu não vou ler isso daí não, digite um número.\n\n");
	    	fflush(stdin);
	    	tentativa = getchar();
	    	fflush(stdin);

	    	while(scanf("%d", &tentativa) == 0){
	    		fflush(stdin);
	    		getchar();
	    		fflush(stdin);
	    	}
	    	printf("OBRIGADA POR DIGITAR UM NÚMERO, ISSO MOSTRA QUE VOCÊ NÃO É ESTÚPIDO, AGORA DIGITE SEU PALPITE: ");

	    }

	}while(senha_correta != tentativa);
	
	printf("\t          _______\n");
	printf("\t\\(^ヮ^)/ < YAY!!!)\n\n\n");


		if(contador == 1){ 
			printf(" (╯°□ °）╯︵ ┻━┻  Já pensou em jogar na loteria? Se não, está na hora de começar a jogar. \n\n");	
		}

	    if(contador == 2){ 
	    	printf("Tem algo de muito errado com você, como coseguiu acertar em 2 jogadas?\n\n");
	    }

		if(contador == 3){  
			printf("Você é muito sortudo, acertou em apenas 3 tentativas.\n\n");
	    }

		if(contador == 4){  
			printf("Palmas para você, nem acredito que acertou em 4 tentativas.\n\n");
	    }   

	    if(contador == 5){
	    	printf("5 tentativas? É sério isso? Parabéns.\n\n");
	    }

	    if(contador > 5 && contador <= 15){
	    	printf("Parabéns, acertou em apenas %d tentativas.\n\n", contador);
	    }

	    if(contador > 15 && contador <= 25){
	    	printf("Você acertou em %d tentativas.\n\n", contador);
	    } 

	    if(contador > 25 && contador <= 30){
	    	printf("Você é meio ruim nesse jogo, alguém ja te disse isso? Acertou a senha em %d tentativas\n\n", contador);
	    }         

	    if(contador > 30 && contador <= 40){
	    	printf("┻━┻ ︵ヽ(º□ º)ﾉ︵ ┻━┻ Você é muito ruim. %d tentativas? sério?\n\n", contador);
	    }

	    if(contador > 40){
	    	printf("Acho que você deveria se aposentar desse jogo. Fez %d tentativas.\n\n", contador);
	    }                                           
    
    printf("\n\t\tPressione <ENTER> para voltar ao MENU");
    fflush(stdin);
    fflush(stdout);
    scanf("%c", &enter);
    while(getchar() != '\n');

    system("clear");

    menu();
return;
}


void charada(){

	int perguntas = 0;
	int resposta;
	int vidas = 2;

	printf("\t\t◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉ \n");
    printf("\t\t◉✧✧✧✧✧✧✧✧✧✧✧✧✧✧✧CHARADA✧✧✧✧✧✧✧✧✧✧✧✧✧✧✧◉ \n");                                                                                                                    
 	printf("\t\t◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉ \n\n");

 	printf("Bem-vindo ao charada,\n");
	printf("O jogo é simples, você só precisa responder as perguntas corretamente, senão, perde vidas. Você começa com 2 vidas, caso o número de vidas chegue a zero, o jogo termina.\n");
	printf("-PARA VOLTAR AO MENU DIGITE UM NÚMERO NEGATIVO-\n\n");

	do{
 		
		if(perguntas == 0){
			printf("( ￣▽￣)/ <Três gatos comem três ratos em três minutos. Cem gatos comem cem ratos em quanto tempo?)\n\n");
			
			VIDAS(vidas);
					
			printf("(1)1 MINUTO\n");
			printf("(2)100 MINUTOS\n");
			printf("(3)180 SEGUNDOS\n");
			printf("(4)3 SEGUNDOS\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): 180 SEGUNDOS É IGUAL A 3 MINUTOS\n");
						limpar_tela();						
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): 180 SEGUNDOS É IGUAL A 3 MINUTOS\n");
						limpar_tela();
						break;

				case 3 :
						printf("ACERTOU!!!\n");
						printf("180 SEGUNDOS É IGUAL A 3 MINUTOS\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): 180 SEGUNDOS É IGUAL A 3 MINUTOS\n");
						limpar_tela();
						break;

				default :
						perguntas--;
						sleep(1);
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 1){
			tela_inicial();
			printf("(〜￣▽￣)〜 <O pai do padre é filho do meu pai. O que eu sou do Padre?)\n\n");

			VIDAS(vidas);
					
			printf("(1)TIO\n");
			printf("(2)AVÔ\n");
			printf("(3)SOBRINHO\n");
			printf("(4)NENHUMA DAS ANTERIORES\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (1): TIO\n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): TIO\n");
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): TIO\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): TIO\n");
						limpar_tela();
						break;
						


				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 2){
			tela_inicial();
			printf("ヽ( ﾟ〇ﾟ)ﾉ <Um avião lotado de passageiros parte do Rio de Janeiro em direção a Buenos Aires. Por uma fatalidade cai na fronteira Brasil-Argentina. Onde serão enterrados os sobreviventes?)\n\n");
			
			VIDAS(vidas);

			printf("(1)BRASIL\n");
			printf("(2)ARGENTINA\n");
			printf("(3)DEPENDE DA NACIONALIDADE DOS PASSAGEIROS\n");
			printf("(4)NENHUMA DAS ANTERIORES\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): OS SOBREVIVENTES NÃO SERÃO ENTERRADOS\n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): OS SOBREVIVENTES NÃO SERÃO ENTERRADOS\n");
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): OS SOBREVIVENTES NÃO SERÃO ENTERRADOS\n");
						limpar_tela();
						break;

				case 4 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (4): OS SOBREVIVENTES NÃO SERÃO ENTERRADOS\n");
						limpar_tela();
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 3){
			tela_inicial();
			printf("<( ￣ ︶ ￣)> <Em uma sala há 100 pessoas, 99%% são homens. Quantos homens devem sair da sala para que a porcentagem de homens na sala passe a ser 98%%?)\n\n");
			
			VIDAS(vidas);

			printf("(1)2 HOMENS\n");
			printf("(2)ESSA PERGUNTA É IMPOSSÍVEL DE SER RESPONDIDA\n");
			printf("(3)50 HOMENS\n");
			printf("(4)1 HOMEM\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): Em 100 pessoas, 99 são homens, presume-se que haja 1 mulher, desta forma, para que haja 98%% de homens, seria necessário haver 98 homens e 2 mulheres… Como não podemos alterar o número de mulheres, teriamos que manter a proporção de 98:2 ou simplificando, 49:1. Isto leva a concluir que se temos 99 homens e precisariamos ter 49, teriamos que retirar 50 homens para diminuir 1%% \n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): Em 100 pessoas, 99 são homens, presume-se que haja 1 mulher, desta forma, para que haja 98%% de homens, seria necessário haver 98 homens e 2 mulheres… Como não podemos alterar o número de mulheres, teriamos que manter a proporção de 98:2 ou simplificando, 49:1. Isto leva a concluir que se temos 99 homens e precisariamos ter 49, teriamos que retirar 50 homens para diminuir 1%% \n");
						limpar_tela();
						break;

				case 3 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (3): Em 100 pessoas, 99 são homens, presume-se que haja 1 mulher, desta forma, para que haja 98%% de homens, seria necessário haver 98 homens e 2 mulheres… Como não podemos alterar o número de mulheres, teriamos que manter a proporção de 98:2 ou simplificando, 49:1. Isto leva a concluir que se temos 99 homens e precisariamos ter 49, teriamos que retirar 50 homens para diminuir 1%% \n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): Em 100 pessoas, 99 são homens, presume-se que haja 1 mulher, desta forma, para que haja 98%% de homens, seria necessário haver 98 homens e 2 mulheres… Como não podemos alterar o número de mulheres, teriamos que manter a proporção de 98:2 ou simplificando, 49:1. Isto leva a concluir que se temos 99 homens e precisariamos ter 49, teriamos que retirar 50 homens para diminuir 1%% \n");	
						limpar_tela();											
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 4){
			tela_inicial();
			printf("\\( ᗒ ᗣ ᗕ )/ <Camiseta, acetona, macaco, abacaxi, mágico. Qual é a próxima palavra da sequência?)\n\n");
			
			VIDAS(vidas);

			printf("(1)CAVALO\n");
			printf("(2)PUBLICAÇÃO\n");
			printf("(3)GRAVATA\n");
			printf("(4)ESCOVA\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): A regra que determina a seqüência é a posição da letra “C”, publicação é a única palavra na qual “C” é a sexta letra.\n");
						limpar_tela();
						break;

				case 2 :
						printf("ACERTOU!!!\n");	
						printf("A RESPOSTA CORRETA É A (2): A regra que determina a seqüência é a posição da letra “C”, publicação é a única palavra na qual “C” é a sexta letra.\n");
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): A regra que determina a seqüência é a posição da letra “C”, publicação é a única palavra na qual “C” é a sexta letra.\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");	
						printf("A RESPOSTA CORRETA É A (2): A regra que determina a seqüência é a posição da letra “C”, publicação é a única palavra na qual “C” é a sexta letra.\n");
						limpar_tela();											
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }	


	    if(perguntas == 5){
			tela_inicial();
			printf("┐( ︶▽︶)┌ <6 e 4 = 210, 9 e 2 = 711 ,8 e 5 = 313, 5 e 2 = ?)\n\n");
			
			VIDAS(vidas);

			printf("(1)37\n");
			printf("(2)542\n");
			printf("(3)107\n");
			printf("(4)41\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (1): 5-2=3, 5+2= 7, juntando = 37\n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): 5-2=3, 5+2= 7, juntando = 37\n");
						limpar_tela2();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): 5-2=3, 5+2= 7, juntando = 37\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (1): 5-2=3, 5+2= 7, juntando = 37\n");
						limpar_tela();
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 6){
			tela_inicial();
			printf("＼(  º□ º)/ <Se ontem fosse amanhã hoje seria sexta-feira, que dia é hoje?)\n\n");
			
			VIDAS(vidas);

			printf("(1)SEGUNDA\n");
			printf("(2)SÁBADO\n");
			printf("(3)DOMINGO\n");
			printf("(4)TERÇA\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): DOMINGO\n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): DOMINGO\n");
						limpar_tela();
						break;

				case 3 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (3): DOMINGO\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (3): DOMINGO\n");
						limpar_tela();
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 7){
			tela_inicial();
			printf("⌒ (o＾▽＾o)ノ <Uma pedra cumprimentou uma tora de madeira, que horas são?)\n\n");
			
			VIDAS(vidas);

			printf("(1)12:00\n");
			printf("(2)16:20\n");
			printf("(3)00:00\n");
			printf("(4)20:00\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): ""OI-TORA"" \n");
						limpar_tela();
						break;

				case 2 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): ""OI-TORA"" \n");
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (4): ""OI-TORA"" \n");
						limpar_tela();
						break;

				case 4 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (4): ""OI-TORA"" \n");	
						limpar_tela();					
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }


	    if(perguntas == 8){
			tela_inicial();
			printf("＼( ＾▽＾)／ <Em um avião, dentre os passageiros há 4 romanos e 1 inglês, qual é o nome da aeromoça?)\n\n");
			
			VIDAS(vidas);

			printf("(1)HELENA\n");
			printf("(2)IVONE\n");
			printf("(3)MIKAELA\n");
			printf("(4)ELIZABETH\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): ""IV"" É 4 EM NÚMEROS ROMANOS E ""ONE"" É 1 EM INGLÊS\n");
						limpar_tela();
						break;

				case 2 :
						printf("ACERTOU!!!\n");
						printf("A RESPOSTA CORRETA É A (2): ""IV"" É 4 EM NÚMEROS ROMANOS E ""ONE"" É 1 EM INGLÊS\n");	
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): ""IV"" É 4 EM NÚMEROS ROMANOS E ""ONE"" É 1 EM INGLÊS\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");	
						printf("A RESPOSTA CORRETA É A (2): ""IV"" É 4 EM NÚMEROS ROMANOS E ""ONE"" É 1 EM INGLÊS\n");
						limpar_tela();											
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }	


	    if(perguntas == 9){
			tela_inicial();
			printf("(〃＾▽＾〃) <Na rua há quatro cachorros correndo atrás de uma cadela no cio, que horas são?)\n\n");
			
			VIDAS(vidas);

			printf("(1)00:00\n");
			printf("(2)12:56\n");
			printf("(3)17:45\n");
			printf("(4)16:01\n\n");
			printf("RESPOSTA:");

			scanf("%d", &resposta);

			switch(resposta){
				case 1 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): ""QUATRO PARA UMA""\n");
						limpar_tela();
						break;

				case 2 :
						printf("ACERTOU!!!\n");	
						printf("A RESPOSTA CORRETA É A (2): ""QUATRO PARA UMA""\n");
						limpar_tela();
						break;

				case 3 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): ""QUATRO PARA UMA""\n");
						limpar_tela();
						break;

				case 4 :
						printf("ERROU!!!\n");
						vidas--;
						printf("-♡\n");
						printf("A RESPOSTA CORRETA É A (2): ""QUATRO PARA UMA""\n");
						limpar_tela();												
						break;

				default :
						perguntas--;
						limpar_tela();
						printf("ESSA NÃO É UMA OPÇÃO\n");
						tela_inicial();
						break;
		    }
	    }	


	    perguntas++;

	    if(resposta < 0){
	    	system("clear");
	    	menu();
	    }

		if(vidas <= 0){
			printf("(ｏ・_・)ノ(╥ _ ╥ ) VOCÊ NÃO TEM MAIS VIDAS!! OU SEJA, ESTÁ MORTO.\n");
			printf("\n\n\t\tPressione <ENTER> para voltar ao MENU");
    		fflush(stdin);
    		fflush(stdout);
   			
   		 	while(getchar() != '\n');
			system("clear");
			menu();
		}

	}while(perguntas != 10);

	printf("\n\t\t\t          _______\n");
	printf("\t\t\t\\(^ヮ^)/ < YAY!!!)\n\n\n");

	printf("\n\t\tPressione <ENTER> para voltar ao MENU.");
    fflush(stdin);
    fflush(stdout);
    
    while(getchar() != '\n');
    system("clear");
    menu();
return;
}


void limpar_tela(){

	char enter;

	printf("\n\t\t\t   Pressione <ENTER>");
    fflush(stdin);
    fflush(stdout);
    scanf("%c", &enter);
   	while(getchar() != '\n');

	system("clear");
return;
}


void limpar_tela2(){

	printf("\n\t\t\t   Pressione <ENTER>");
    fflush(stdin);
    fflush(stdout);
    
   	while(getchar() != '\n');
   	fflush(stdin);

	system("clear");	
return;
}


void tela_inicial(){

	printf("\t\t◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉ \n");
    printf("\t\t◉✧✧✧✧✧✧✧✧✧✧✧✧✧✧✧CHARADA✧✧✧✧✧✧✧✧✧✧✧✧✧✧✧◉ \n");                                                                                                                    
 	printf("\t\t◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉◉Θ◉ \n\n");
return;	
}


void VIDAS(int vidas){

	int contador = 1;

	printf("VIDAS:");
	for(; contador <= vidas; contador++)
		printf(" ♡ ");
	printf("\n\n");
return;
}


void ppt(){

	int PLAYER1, PLAYER2, PLAYER3, v1, v2, v3, acabou = 0;
	char enter;

	historia_ppt();	

	do{

		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n");
 		printf("\t\t口☆ ━━━━━━━━━☆   PEDRA/PAPEL\\TESOURA  ☆ ━━━━━━━━☆ 口\n");
 		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n\n");


		printf("Bem-vindo ao PEDRA/PAPEL/TESOURA,\n");
		printf("O jogo é simples e é definido por estas 3 regras:\n");
		printf("• A tesoura corta o papel;\n");
		printf("• O papel embrulha a pedra;\n");
		printf("• A pedra quebra a tesoura.\n");
		printf("ESCOLHA UM NÚMERO ENTRE 1 E 3\n");
		printf("-O JOGO TERMINA QUANDO UM JOGADOR GANHA-\n\n");

		printf("(1)Q(ºo ºQ) (GUERREIRO DE JO - PEDRA)\n\n");
		printf("(2)(ﾒ￣▽￣)ﾉಠ  (GUERREIRO KEN - PAPEL)\n\n");
		printf("(3)( ＾▽＾)っ✂  (GUERREIRO DE PO - TESOURA)\n\n\n");
		printf("PLAYER1: ");

		v1 = scanf("%d", &PLAYER1);
		system("clear");


	
		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n");
 		printf("\t\t口☆ ━━━━━━━━━☆   PEDRA/PAPEL\\TESOURA  ☆ ━━━━━━━━☆ 口\n");
 		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n\n");


		printf("(1)Q(ºo ºQ) (GUERREIRO DE JO - PEDRA)\n\n");
		printf("(2)(ﾒ￣▽￣)ﾉಠ  (GUERREIRO KEN - PAPEL)\n\n");
		printf("(3)( ＾▽＾)っ✂  (GUERREIRO DE PO - TESOURA)\n\n\n");
		printf("PLAYER2: ");

		v2 = scanf("%d", &PLAYER2);
		system("clear");



		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n");
 		printf("\t\t口☆ ━━━━━━━━━☆   PEDRA/PAPEL\\TESOURA  ☆ ━━━━━━━━☆ 口\n");
 		printf("\t\t口口口口口口口口口口口口口口口口口口口口口口口口口口\n\n");


		printf("(1)Q(ºo ºQ) (GUERREIRO DE JO - PEDRA)\n\n");
		printf("(2)(ﾒ￣▽￣)ﾉಠ  (GUERREIRO KEN - PAPEL)\n\n");
		printf("(3)( ＾▽＾)っ✂  (GUERREIRO DE PO - TESOURA)\n\n\n");
		printf("PLAYER3: ");

		v3 = scanf("%d", &PLAYER3);
		system("clear");



		printf("			       				                 |ZZzzz                         \n");
		printf("				           	                         |                          \n");
		printf("		            					         |                              \n");
		printf("    						    	    |ZZzzz      /^\\            |ZZzzz      \n");
		printf("	    					    	    |          |~~~|           |            \n");
		printf("							    |        |^^^^^^^|        / \\                  \n");
		printf("							   /^\\       |[]+    |       |~~~|                 \n");
		printf("							|^^^^^^^|    |    +[]|       |   |                  \n");
		printf("     |						        |    +[]|/\\/\\/\\/\\^/\\/\\/\\/\\/|^^^^^^^|\n");
		printf("   ! +_						        |+[]+   |~~~~~~~~~~~~~~~~~~|    +[]|        \n");
		printf("  _G//\\|					        |       |  []   /^\\   []   |+[]+   |       \n");
		printf(" { }` (__       				   	|   +[]+|  []  || ||  []   |   +[]+|        \n");
		printf(" ~(_,-'> `       				  	|[]+    |      || ||       |[]+    |        \n");
		printf("  / >             					|_______|------------------|_______|        \n");
		printf("wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n");
		printf("\t\t\tVERIFICANDO O RESULTADO...\n");
		sleep(1);
		system("clear");

        printf("	      				                         	 |ZZzzz                                   \n");
		printf("		           	                            	         |                                \n");
		printf("		            			            	         |                                    \n");
		printf("    				    	            	    |ZZzzz      /^\\            |ZZzzz            \n");
		printf("	    			    	        	    |          |~~~|           |                      \n");
		printf("					               	    |        |^^^^^^^|        / \\                        \n");
		printf("						           /^\\       |[]+    |       |~~~|                           \n");
		printf("					        	|^^^^^^^|    |    +[]|       |   |                            \n");
		printf("            |					        |    +[]|/\\/\\/\\/\\^/\\/\\/\\/\\/|^^^^^^^|          \n");
		printf("   	  ! +_			       			|+[]+   |~~~~~~~~~~~~~~~~~~|    +[]|                      \n");
		printf("         _G//\\|			       	    		|       |  []   /^\\   []   |+[]+   |         \n");
		printf("        { }` (__        		   		|   +[]+|  []  || ||  []   |   +[]+|                  \n");
		printf("        ~(_,-'> `       			  	|[]+    |      || ||       |[]+    |                  \n");
		printf("         / >             				|_______|------------------|_______|                  \n");
		printf("wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n");
		printf("\t\t\tVERIFICANDO O RESULTADO...\n");
		sleep(1);
		system("clear");

	    printf("	      				                         	 |ZZzzz                                   \n");
		printf("		           	                            	         |                                \n");
		printf("		            			            	         |                                    \n");
		printf("    				    	              	    |ZZzzz      /^\\            |ZZzzz            \n");
		printf("	    			    	        	    |          |~~~|           |                      \n");
		printf("					               	    |        |^^^^^^^|        / \\                        \n");
		printf("						           /^\\       |[]+    |       |~~~|                           \n");
		printf("					        	|^^^^^^^|    |    +[]|       |   |                            \n");
		printf("                     |				        |    +[]|/\\/\\/\\/\\^/\\/\\/\\/\\/|^^^^^^^|      \n");
		printf("       	           ! +_			           	|+[]+   |~~~~~~~~~~~~~~~~~~|    +[]|              \n");
		printf("                  _G//\\|			       	|       |  []   /^\\   []   |+[]+   |             \n");
		printf("                 { }` (__        		        |   +[]+|  []  || ||  []   |   +[]+|          \n");
		printf("                 ~(_,-'> `     			        |[]+    |      || ||       |[]+    |          \n");
		printf("                  / >                            	|_______|------------------|_______|      \n");
		printf("wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n");
		printf("\t\t\tVERIFICANDO O RESULTADO...\n");
		sleep(1);
		system("clear");

		printf("                                                                                  |  \n");
		printf("                                                                                  |  \n"); 
		printf("		                                                                  |          \n");        
		printf("                                                                     |ZZzzz      /   \n");          
		printf("					        		     |          |~                               \n");           
		printf("			             				     |        |^^^                           \n");           
		printf("			   		    	_______             /^\\       |[]+                      \n");       
		printf("			     		       |  /.-- }         |^^^^^^^|    |                      \n");          
		printf("	                    |   	 __/)  | //_,-'          |    +[]|/\\/\\/\\/\\       \n");            
		printf("                          ! +_		(_ º \\}|//'              |+[]+   |~~~~~~~~      \n");  
		printf("	                 _G//\\|	          `\\  ^^^^^^^'.          |       |  []   /  \n");             
		printf("                        { }` (__            \\  , (   /\\\\         |   +[]+|  []  ||\n");            
		printf("                        ~(_,-'> `	     >/ -->/`  \\'.__ .   |[]+    |      ||      \n");              
		printf("	                 / >	 	    ^^   ^^     '^^^'    |_______|--------           \n");
		printf("wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww  \n");
		printf("\t\t\tVERIFICANDO O RESULTADO...\n");
		sleep(1);
		system("clear");

		printf("                                                                                  |  \n");
		printf("                                                                                  |  \n"); 
		printf("		                                                                  |          \n");        
		printf("                                                                     |ZZzzz      /   \n");          
		printf("					        		     |          |~                               \n");           
		printf("			             				     |        |^^^                           \n");           
		printf("			   		    	_______             /^\\       |[]+                      \n");       
		printf("			     		       |  /.-- }         |^^^^^^^|    |                      \n");          
		printf("	                    |   	 __/)  | //_,-'          |    +[]|/\\/\\/\\/\\       \n");            
		printf("                          ! +_       ~^~(_ º \\}|//'              |+[]+   |~~~~~~~~  \n");  
		printf("	                 _G//\\|	          `\\  ^^^^^^^'.          |       |  []   /  \n");             
		printf("                        { }` (__            \\  , (   /\\\\         |   +[]+|  []  ||\n");            
		printf("                        ~(_,-'> `	     >/ -->/`  \\'.__ .   |[]+    |      ||      \n");              
		printf("	                 / >	 	    ^^   ^^     '^^^'    |_______|--------           \n");
		printf("wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww  \n");
		printf("\t\t\tVERIFICANDO O RESULTADO...\n");
		sleep(2);
		system("clear"); 

		if((v1 == 1) && (v2 == 1) && (v3 == 1)){

			if(((PLAYER1 > 3) || (PLAYER1 < 1)) || ((PLAYER2 > 3) || (PLAYER2 < 1)) || ((PLAYER3 > 3) || (PLAYER3 < 1))){

					printf("\n\t\tISSO NÃO É UMA ESCOLHA\n");
					sleep(2);
					limpar_tela2();

			}else{
					
				if((PLAYER1 == PLAYER2) && (PLAYER2 == PLAYER3)){
				printf("\n\t\t    GUERREIROS DO MESMO REINO NÃO LUTAM ENTRE SI\n\n");
				}


				else if(((PLAYER1 == 1) && (PLAYER2 == 3) && (PLAYER3 == 3)) || ((PLAYER1 == 2) && (PLAYER2 == 1) && (PLAYER3 == 1)) || ((PLAYER1 == 3) && (PLAYER2 == 2) && (PLAYER3 == 2))){
				printf("\n\t\t\tPLAYER1 É VITORIOSO\n\n");
				acabou = 1;
				}
				
				
				else if(((PLAYER2 == 1) && (PLAYER1 == 3) && (PLAYER3 == 3)) || ((PLAYER2 == 2) && (PLAYER1 == 1) && (PLAYER3 == 1)) || ((PLAYER2 == 3) && (PLAYER1 == 2) && (PLAYER3 == 2))){
				printf("\n\t\t\tPLAYER2 É VITORIOSO\n\n");
				acabou = 1;
				}


				else if(((PLAYER3 == 1) && (PLAYER1 == 3) && (PLAYER2 == 3)) || ((PLAYER3 == 2) && (PLAYER1 == 1) && (PLAYER2 == 1)) || ((PLAYER3 == 3) && (PLAYER1 == 2) && (PLAYER2 == 2))){
				printf("\n\t\t\tPLAYER3 É VITORIOSO\n\n");
				acabou = 1;
				}

				
		        else{
				    printf("\n\t\t\t   ~HOUVE EMPATE~\n\n");	
					sleep(2);
					limpar_tela2();
				}	
			}

		}else{

				printf("\n\t\t\tISSO NÃO É UMA ESCOLHA\n");
				while(getchar()!='\n');
				sleep(2);
				limpar_tela2();
		}

			

	}while(acabou == 0);



	printf("\n\t\tPressione <ENTER> para voltar ao MENU");
    fflush(stdin);
    fflush(stdout);
    scanf("%c", &enter);
    while(getchar() != '\n');

    system("clear");

    menu();
return;
}

void historia_ppt(){

	printf("\n");                                                                                                    
    printf("                         ,-.^._                 _                                           \n");                    
    printf("                       .'      `-.            ,' ;                                          \n");                     
    printf("            /`-.  ,----'         `-.   _  ,-.,'  `                                          \n");                       
    printf("         _.'   `--'                 `-' '-'      ;                                          \n");               
    printf("        :                                       ;                                           \n");                  
    printf("        ,'          o                           ;                                           \n");      
    printf("       :      Reino de JO                      ;                                            \n");         
    printf("       :                                      ;                                             \n");                   
    printf("       :                                      :         A MUITO MUITO TEMPO ATRÁS,          \n");           
    printf("       ;                                      :    EXISTIAM APENAS TRÊS REINOS VIZINHOS...  \n");                  
    printf("      (                            o          ;                                             \n");          
    printf("       `-.                    Reino de KEN  ,'                                              \n");         
    printf("         ;                                 :                                                \n");        
    printf("       .'                             .-._,'                                                \n");       
    printf("     .'           o                   `.                                                    \n");             
    printf("  _.'        Reino de PO             .__;                                                   \n");         
    printf("  `._                               ;                                                       \n");        
    printf("     `.                            :                                                        \n");                 
    printf("       `.               ,..__,---._;                                                        \n");             
    printf("         `-.__         :                                                                    \n");                  
    printf("              `.--.____;                                                                    \n"); 
 	limpar_tela2();

 	printf("                                                               .---.            \n");             
    printf("                                                              /  .  \\          \n");  
    printf("                                                             |\\_/|   |         \n");     
    printf("                                                             |   |  /|          \n");        
 	printf(" .----------------------------------------------------------------'  |          \n");    
	printf(" /  .-.    OS TRÊS REIS SE ODIAVAM DE TAL FORMA QUE CONSTANTEMENTE   |          \n");     
	printf("|  /   \\   MANDAVAM UM SÚDITO ESCOLHIDO A DEDO PARA BATALHAR ATÉ     |         \n");        
	printf("| |\\_.  |            A MORTE PELA HONRA DE SEU REINO...              |         \n");       
	printf("|\\|  | /|                                                            |         \n");           
	printf("| `---' |  Q(ºo ºQ) (GUERREIRO DE JO)    (ﾒ￣▽￣)ﾉಠ  (GUERREIRO KEN) |          \n");         
	printf("|       |                                                            |          \n");                                 
	printf("|       |              ( ＾▽＾)っ✂  (GUERREIRO DE PO)                /           \n");         
	printf("|       |----------------------------------------------------------'            \n");   
	printf("\\       |                                                                      \n");     
	printf(" \\     /                                                                       \n");         
	printf("  `---'                                                                         \n");                                                                     
	limpar_tela2();
 	
 	printf("AS BATALHAS JÁ ERAM TRAVADAS A TANTO TEMPO QUE NÍNGUEM MAIS LEMBRAVA O MOTIVO DO DESENTENDIMENTO ENTRE OS TRÊS...\n");
 	printf("MESMO ASSIM, OS POVOS NUNCA QUESTIONAVAM SEU RESPECTIVO REI, POIS TODOS OS TRÊS ERAM MUITO RESPEITADOS E AMADOS...\n");
	limpar_tela2();

	printf("-----------------------------------------------------------------------------------------------------------------------------------------------\n");
 	printf(" O RESULTADO DAS BATALHAS ERA SEMPRE O MESMO:\n");
 	printf(" -QUANDO JO MANDAVA SEUS SÚDITOS PARA O REINO DE KEN, TODOS ERAM MORTOS, QUANDO MANDAVA PARA O REINO DE PO, TODOS VOLTAVAM VIVOS E VITORIOSOS. \n");
 	printf(" -QUANDO KEN MANDAVA SEUS SÚDITOS PARA O REINO DE PO, TODOS ERAM MORTOS, QUANDO MANDAVA PARA O REINO DE JO, TODOS VOLTAVAM VIVOS E VITORIOSOS. \n");
 	printf(" -QUANDO PO MANDAVA SEUS SÚDITOS PARA O REINO DE JO, TODOS ERAM MORTOS, QUANDO MANDAVA PARA O REINO DE KEN, TODOS VOLTAVAM VIVOS E VITORIOSOS. \n");
	printf("-----------------------------------------------------------------------------------------------------------------------------------------------\n");
 	printf("\t\t\tDESTA FORMA SE MANTEU POR MUITAS GERAÇÕES E NUNCA HOUVE UMA TRÉGUA SEQUER...\n");
	limpar_tela2();

 	printf("ESTÁ NA HORA DE DECIDIR DE QUE LADO VOCÊ IRÁ FICAR, VAMOS COMEÇAR.\n");
	limpar_tela2();
return;	
} 



  

void campo_minado(){
 
    int linha, coluna; 
    char enter;
 	
    
	printf("\t\t                            _                                \n");          
	printf("\t\t          ,--.!,           (_)                       ,--.!,  \n");   
	printf("\t\t       __/   -*-  _ __ ___  _ _ __   __ _ ___     __/   -*-  \n"); 
	printf("\t\t     ,d08b.  '|` | '_ ` _ \\| | '_ \\ / _` / __|  ,d08b.  '|`\n");
	printf("\t\t     0088MM      | | | | | | | | | | (_| \\__ \\  0088MM     \n"); 
	printf("\t\t     `9MMP'      |_| |_| |_|_|_| |_|\\__,_|___/  `9MMP'      \n\n");



	printf(" _____________________________________________________________________________________________  \n");
	printf("|                                                                                             |  \n");
	printf("|    VOCÊ FOI SEQUESTRADO PELOS INIMIGOS JUNTO COM SEU CÃO(MAX).                              | \n"); 
	printf("|    IMAGINANDO QUE VOCÊS NÃO FOSSEM CAPAZES,                                                 | \n");
	printf("|    OS INIMIGOS TE DÃO UMA CHANCE DE ESCAPAR VIVOS,                                          | \n"); 
	printf("|    SE SEU CÃO, SEGUIDO PELOS SEUS COMANDOS,                                                 | \n");
	printf("|    DESCOBRIREM ONDE ESTÃO ENTERRADAS AS MINAS QUE SE LOCALIZAM NO TERRITÓRIO INIMIGO.       | \n");
	printf("|    O QUE ELES NÃO CONTAVAM, É QUE VOCÊ E MAX SÃO ESPECIALISTAS EM BOMBAS E MAX CONSEGUE,    | \n"); 
	printf("|    POR MEIO DE SINAIS, AVISÁ-LO QUANTAS BOMBAS PRÓXIMAS HÁ DE ONDE ELE CAVA.                | \n");
	printf("|    OS INIMIGOS TE DÃO APENAS UM PEDAÇO DE PAPEL E UM LÁPIS                                  | \n");
	printf("|    PARA VOCÊ ANOTAR AS COORDENADAS DOS LOCAIS LIVRES DE BOMBAS.                             | \n");
	printf("|    BOA SORTE,                                                                               | \n");
	printf("|    TENHA CUIDADO PARA NÃO PASSAR OS COMANDOS ERRADOS PARA SEU COMPANHEIRO,                  | \n");
	printf("|    SENÃO ELE IRÁ MORRER POR SUA CULPA E VOCÊ SERÁ FUZILADO PELOS INIMIGOS.                  | \n");
	printf("|_____________________________________________________________________________________________| \n\n");



	printf("\tBem-vindo ao minas,\n");
	printf("\tO jogo é simples, você só precisa cavar todas as coordenadas sem bombas do terreno.\n");
	printf("\t\t-ESCOLHER UMA COORDENADA AVISA O NÚMERO DE BOMBAS ADJACENTES Á ELA-\n");
	printf("\t\t-EXISTEM 10 BOMBAS ARMADAS NO CAMPO-\n");
	limpar_tela2();

    terreno_escondido();
    terreno_visivel();
    escreve_terreno_visivel();
    
 
    for(;;){

        do{

        printf("\nESCOLHA AS SUAS COORDENADAS: \n\n");
        printf("|LINHA| ");
        scanf("%d", &linha);
        printf("\n|COLUNA| ");
        scanf("%d", &coluna);
         
        }while((linha < 0) || (linha > TAM - 1) || (coluna < 0) || (linha > TAM - 1));
 
 
        if(minas[linha][coluna] == '*'){

            system("clear");

            system("clear");

			printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\   .-;:-,.    /          \n");
            printf("    \\  ...::';'.:....' /         \n");
            printf("       (^^.^~~:.'')  ).           \n");
            printf("       -\\  \\     /  /-          \n");
            printf("      ___\\  \\   /  /___         \n");

            usleep(80000);
            system("clear");

			printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\         .  ./           \n");
            printf("    \\     .:';'.:..'   /         \n");
            printf("        ( ^^.^~~:.'').            \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("     ((| :. ~ ^  :. .|))          \n");
            printf("  -   (\\- |  \\ /  |  /)  -      \n");
            printf("       -\\  \\     /  /-          \n");
            printf("      ___\\  \\   /  /___         \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\  .:';'.:..   ./         \n");
            printf("    \\   /   /       )            \n");
            printf("       ( ^^.^~~:.  '').           \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("     ((| :. ~ ^  :.  .|))         \n");
            printf("  -   (\\- |  \\ /  |  /)  -      \n");
            printf("       -\\  \\     /  /-          \n");
            printf("      ___\\  \\   /  /___         \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\  .:';'.:..   ./         \n");
            printf("    \\   /   /       )            \n");
            printf("       ( ^^.^~~:.  '').          \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("     ((| :. ~ ^  :.  .|))         \n");
            printf("  -   (\\- |  \\ /  |  /)  -      \n");
            printf("        -\\  \\     / /-          \n");
            printf("      _____|| || ||_____         \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\  .:';'.:..   ./         \n");
            printf("    \\   /   /       )            \n");
            printf("       ( ^^.^~~:.  '').          \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("     ((| :. ~ ^  :.  .|))         \n");
            printf("  -   (\\- |  \\ /  |  /)  -      \n");
            printf("         || |    | ||               \n");
            printf("      _____|| || ||_____            \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\  .:';'.:..   ./         \n");
            printf("    \\   /   /       )            \n");
            printf("       ( ^^.^~~:.  '').          \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("     ((| :. ~ ^  :.  .|))         \n");
            printf("       -  || |  | ||     -         \n");
            printf("           || |  ||               \n");
            printf("      ______|| |||______            \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("       \\  .:';'.:..   ./         \n");
            printf("    \\   /   /       )            \n");
            printf("       ( ^^.^~~:.  '').          \n");
            printf("  -   (/  .    . . \\ \\)  -      \n");
            printf("         ||  |  |  ||                \n");
            printf("       -   || |  ||     -         \n");
            printf("            ||  ||               \n");
            printf("      _______||||_______            \n");

            usleep(80000);
            system("clear");

            printf("                                  \n");
			printf("                                  \n");
			printf("                                  \n");
            printf("           .:';'.:..   .         \n");
            printf("         /    /     )            \n");
            printf("      - (^^.^~~:.  '').          \n");
            printf("       (:            :)  -      \n");
            printf("          ':._   _.:'                 \n");
            printf("       -    ||  ||     -         \n");
            printf("             |  |               \n");
            printf("     _____((/   \\))_____            \n");

            usleep(80000);
            system("clear");


            
			
			printf("                                  \n");
            printf("          .:';'.:..            \n");
            printf("         /   /     )            \n");
            printf("        (^^.^~~:. '').          \n");
            printf("       (:           :)         \n");
            printf("         ':._   _.:'                 \n");
            printf("           (=====)                     \n"); 
            printf("             | |                       \n");
            printf("             | |               \n");
            printf("             | |               \n");
            printf("       ___((/   \\))___            \n");

            usleep(80000);
            system("clear");

            printf("         ..-^~~~^-..                   \n"); 
            printf("       .~           ~.                 \n");      
            printf("      (;:           :;)                \n");          
            printf("       (:           :)                 \n");           
            printf("         ':._   _.:'                   \n");             
            printf("             | |                       \n");         
            printf("           (=====)                     \n");           
            printf("             | |                       \n");                 
            printf("             | |                       \n");            
            printf("             | |                       \n");                   
            printf("       ___((/   \\))___                \n");  

			usleep(80000);
            system("clear");

            printf("      ____,-~~/~`---.               \n");
			printf("    _/_,---(    ,    )              \n");     
			printf("   /      <    /   )  \\            \n");       
			printf("  ==----------------===;;;=        \n");          
			printf("   \\/~'~'~'~'~'~\\~'~)~'/          \n");               
			printf("   (_ (   \\ (    >    \\)          \n");               
			printf("   \\_( _ <       >_>'              \n");          
			printf("      ~ `-i'::>|--''                 \n");       
			printf("           |;|.|                    \n");              
			printf("         .'|i|i|'.                  \n");      
			printf("  ______(` ^`-' ' )______           \n\n"); 

            usleep(90000);
            system("clear"); 

            printf("     ____,-~~/~  `---.               \n");
			printf("   _/_,---(      ,    )              \n");     
			printf("  /        <    /   )  \\            \n");       
			printf("===------------------===;;;==        \n");          
			printf("  \\/  ~'~'~'~'~'~\\~'~)~'/          \n");               
			printf("  (_ (   \\  (     >    \\)          \n");               
			printf("  \\_( _ <         >_>'              \n");          
			printf("     ~ `-i' ::>|--''                 \n");       
			printf("          I;|.|.|                    \n");              
			printf("        .'|i::|i|'.                  \n");      
			printf("  _____(` ^''`-' ' )_____           \n\n"); 

			usleep(100000);
            system("clear");
           
            printf("     _.-^^---....,,--.                \n");
            printf(" _--   ---(           '--_             \n");     
            printf("<------------------------>)           \n");
            printf("|       (         >       |           \n");
            printf(" \\._      .''.,        _./           \n");
            printf("    ```--. . , ; .--'''               \n");
            printf("          | |   |                     \n");
            printf("       .-=||  | |=-.                  \n");
            printf("       `-=#$%%&%%$#=-'                \n");
            printf("          | ;  :|                     \n");
            printf(" _____.,-#%%&$@%%#&#~,._____          \n\n");

			usleep(90000);
            system("clear"); 

                                  
			printf("     _.-^^---....,,--                 \n");
            printf(" _--                  --_             \n");     
            printf("<                        >)           \n");
            printf("|                         |           \n");
            printf(" \\._                   _./           \n");
            printf("    ```--. . , ; .--'''               \n");
            printf("          | |   |                     \n");
            printf("       .-=||  | |=-.                  \n");
            printf("       `-=#$%%&%%$#=-'                \n");
            printf("          | ;  :|                     \n");
            printf(" _____.,-#%%&$@%%#&#~,._____          \n\n");

			usleep(80000);
            system("clear");          
 

			printf("     _.-^^---....,,--                                                                    \n");
            printf(" _--                  --_                                                                \n");     
            printf("<                        >)                                                 -|-          \n");
            printf("|                         |                                                  |           \n");
            printf(" \\._                   _./                                               .-'~~~`-.       \n");
            printf("    ```--. . , ; .--'''                                                .' _     _ `.     \n");
            printf("          | |   |                                                      | |_| | |_) |     \n");
            printf("       .-=||  | |=-. VOCÊ DEU UM COMANDO ERRADO E MAX CAVOU UMA MINA.  | | \\ | |   |    \n");
            printf("       `-=#$%%&%%$#=-'                                                   |    max    |     \n");
            printf("          | ;  :|                                                    \\\\|           |//   \n");
            printf(" _____.,-#%%&$@%%#&#~,._____                                          ^^^^^^^^^^^^^^^^^^^  \n");
            printf("\n");      


            escreve_terreno_escondido();

            printf("\n\t\t\t\t\tPressione <ENTER>");
		    fflush(stdin);
		    fflush(stdout);
		    scanf("%c", &enter);
		   	while(getchar() != '\n');

			system("clear");
    		menu();

            

        }
        else{
            conta_minas(linha, coluna);
        }
                             
        escreve_terreno_visivel();
 
        if(ganhou() == TRUE){

        	printf("\t\t                                               __,------._           \n");                             
            printf("\t\t                                            .-'           ``-.         \n");                       
            printf("\t\t                                          .'  ESTAMOS SALVOS  `.       \n");               
            printf("\t\t                                         .'    COMPANHEIRO!    :       \n");                             
            printf("\t\t                                        ,'        YAY!!!       |       \n");                   
            printf("\t\t                            __       __,',-'`.      ♡        ,'        \n");                         
            printf("\t\t     ,                    ,' e`--o   `--'     `-..______,--''          \n");                 
            printf("\t\t    ((                   (  | __,'                                     \n");                        
            printf("\t\t     \\\\~----------------' \\_;/                                      \n");         
            printf("\t\t     (                      /                                          \n");                
            printf("\t\t     /) ._______________.  )                                           \n");        
            printf("\t\t    (( (               (( (                                            \n");  
            printf("\t\t     ``-'               ``-'                                           \n");     

        	printf("\n\t\t\t\t\tPressione <ENTER>");
		    fflush(stdin);
		    fflush(stdout);
		    scanf("%c", &enter);
		   	while(getchar() != '\n');

			system("clear");
    		menu();
        }
 
 
    }
 
}
 

void terreno_escondido(){
    
    int linhas_bomba[10];
    int colunas_bomba[10];
    int i, j;
    int aux=0;

    srand(time(NULL));
 
    /*escolhe coordenadas de bombas*/
    for(i = 0; i < 8; i++){

        linhas_bomba[i] = abs(rand() % 6);
        colunas_bomba[i] = abs(rand() % 6);

    }


    /*preenchendo bombas na matriz*/
    for(i = 0; i < 7; i++){
        for (j = 0; j < 6; ++j){

            if((linhas_bomba[aux] == i) || (colunas_bomba [aux] == j)){
                minas[i+1][j+1] = '*';
                aux++;
            }else{
                minas[i+1][j+1] = '.';

            }
        }
    }

}




void terreno_visivel(){

    int i, j;
 
    
    for(i = 0; i < TAM; i++)
        for(j = 0; j < TAM; j++)
            terreno[i][j] = '.';
 
 
    for(i = 0; i < TAM; i++)
        for(j = 0; j < TAM; j++)
            if(i == 0 || i == TAM - 1)
                terreno[i][j] = ' ';
 
    for(j = 0; j < TAM; j++)
        for(i = 0; i < TAM; i++)
            if(j == 0 || j == TAM - 1)
                terreno[i][j] = ' ';
}




void escreve_terreno_visivel(){

    int i, j;
 
    system("clear");

    printf("\t\t                            _                                \n");          
	printf("\t\t          ,--.!,           (_)                       ,--.!,  \n");   
	printf("\t\t       __/   -*-  _ __ ___  _ _ __   __ _ ___     __/   -*-  \n"); 
	printf("\t\t     ,d08b.  '|` | '_ ` _ \\| | '_ \\ / _` / __|  ,d08b.  '|`\n");
	printf("\t\t     0088MM      | | | | | | | | | | (_| \\__ \\  0088MM     \n"); 
	printf("\t\t     `9MMP'      |_| |_| |_|_|_| |_|\\__,_|___/  `9MMP'      \n\n\n");

    
    printf("\t\t\t     ");
    for(i = 1; i < TAM - 1; i++)
        printf("%d    ", i);
    printf("\n\n");
 
    
    for(i = 0; i < TAM; i++){
        for(j = 0; j < TAM; j++){
            if(i == 0 || i == TAM - 1){
                terreno[i][j] = ' ';
            }
        }
    }
 
    for(j = 0; j < TAM; j++){
        for(i = 0; i < TAM; i++){
            if(j == 0 || j == TAM - 1){
                terreno[i][j] = ' ';
            }
        }
    }
 
    
    for(i = 0; i < TAM; i++){
        printf("\t\t\t");
        for(j = 0; j < TAM; j++){
            printf("%c ", terreno[i][j]);
            printf("   ");
        }

        if(i > 0 &&  i < TAM - 1)
            printf("%d", i);
        if(i < 7){
            printf("\n\n\n");
        }else{
            printf("\n");
        }    
    }
}




void escreve_terreno_escondido(){

    int i, j;
 
    printf("\t\t\t\t\t -CAMPO MINADO-\n");
    printf("\n\t\t\t\t\t ");
    for(i = 1; i < TAM - 1; i++){
        printf("%d ", i);
    }
    printf("\n");
 
    
    for(i = 0; i < TAM-1; i++){
    	printf("\t\t\t\t\t");
        for(j = 0; j < TAM; j++){
            printf("%c ", minas[i][j]);
        }
        if((i > 0) &&  (i < TAM - 1)){
            printf("%d", i);
        }
        printf("\n");
    } 
    printf("\n");
}
 



int procura_minas(int linha, int coluna){

    int minas_proximas = 0;
 
    /*+*/
    if(minas[linha - 1][coluna] == '*')
        minas_proximas++;
    if(minas[linha + 1][coluna] == '*')
        minas_proximas++;
    if(minas[linha][coluna - 1] == '*')
        minas_proximas++;
    if(minas[linha][coluna + 1] == '*')
        minas_proximas++;
 
    /*diagonais*/
    if(minas[linha - 1][coluna + 1] == '*')
        minas_proximas++;
    if(minas[linha - 1][coluna - 1] == '*')
        minas_proximas++;
    if(minas[linha + 1][coluna + 1] == '*')
        minas_proximas++;
    if(minas[linha + 1][coluna - 1] == '*')
        minas_proximas++;
 
    return minas_proximas;
}
 
 

void conta_minas(int linha, int coluna){

    int minas_proximas = 0;
    int i = 0;
 
        minas_proximas = procura_minas(linha, coluna);
        terreno[linha][coluna] = (char)(((int)'0') + minas_proximas);
 
        
        while((minas_proximas < 1) && (i < linha)){

            minas_proximas = procura_minas(linha - i, coluna);
            terreno[linha - i][coluna] = (char)(((int)'0') + minas_proximas);
            i++;

        }

        i = 0;
        minas_proximas = 0;
      
        while((minas_proximas < 1) && (linha + i < TAM - 2)){

            minas_proximas = procura_minas(linha + i, coluna);
            terreno[linha + i][coluna] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
        
        while((minas_proximas < 1) && (i < coluna)){

            minas_proximas = procura_minas(linha, coluna - i);
            terreno[linha][coluna - i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
       
        while((minas_proximas < 1) && (coluna + i < TAM - 2)){

            minas_proximas = procura_minas(linha, coluna + i);
            terreno[linha][coluna + i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
        
        while((minas_proximas < 1) && (coluna + i < TAM - 2) && (i < linha)){

            minas_proximas = procura_minas(linha - i, coluna + i);
            terreno[linha + i][coluna + i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
        
        while((minas_proximas < 1) && (i < linha) && (i < linha) && (i < coluna)){

            minas_proximas = procura_minas(linha - i, coluna - i);
            terreno[linha - i][coluna - i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
       
        while((minas_proximas < 1) && (linha + i < TAM - 2) && (coluna + i < TAM - 2)){

            minas_proximas = procura_minas(linha + i, coluna + i);
            terreno[linha + i][coluna + i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

        i = 0;
        minas_proximas = 0;
       
        while((minas_proximas < 1) && (linha + i < TAM - 2) && (i < coluna)){

            minas_proximas = procura_minas(linha + i, coluna - i);
            terreno[linha + i][coluna - i] = (char)(((int)'0') + minas_proximas);
            i++;
        }

}
 

int ganhou(){

    int i, j;
 
    for(i = 1; i < TAM - 1; i++){
        for(j = 1; j < TAM - 1; j++){
            if((terreno[i][j] == '.') && (minas[i][j] != '*')){
                return FALSE;
            }
        }
    }

return TRUE;
}
 

